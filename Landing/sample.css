/* Sections of Layout
-------------------------------------- */
/* Layout is stacked vertically by default (for narrower viewports), so give some breathing room between the sections. */
.container > * {
    margin-bottom: 10px;
  }
  
  /* Now let's apply grid for wider viewports. */
  @media screen and (min-width: 40em) {
    .container > * {
      margin-bottom: 0;
    }
    /* Define the grid */
    .container  {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr;
      grid-gap: 20px 25px;
    }
    /* Place items on the grid */
    .header,
    .footer {
      grid-column: 1 / -1;
    }
    .content {
      grid-column: 2 / 3;
    }
  }
  
  /* Generic styles for demo purposes
  -------------------------------------- */
  .container {
    font-family: Helvetica, Arial, sans-serif;
    margin-left: auto;
    margin-right: auto;
    max-width: 75rem;
  }
  
  .container > * {
    background-color: #ccc;
    padding: 1em;
  }
  
  /* Typically, you wouldn't specify a height or min-height on this, instead allowing your actual content (i.e., text, images, etc.) to dictate the height of your content area. But since this example has very minimal content, I've set a min-height to mimic a taller content area. */
  .content {
    min-height: 450px;
  }
  

  .case > * {
    margin-bottom: 10px;
  }
  
  /* Now let's apply grid for wider viewports. */
  @media screen and (min-width: 40em) {
    .case > * {
      margin-bottom: 0;
    }
    /* Define the grid */
    .case  {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr 1fr;
      grid-gap: 20px 25px;
    }
    /* Place items on the grid */
    .header,
    .footer {
      grid-column: 1 / -1;
    }
    .content {
      grid-column: 2 / 3;
    }
  }
  
  /* Generic styles for demo purposes
  -------------------------------------- */
  .case {
    font-family: Helvetica, Arial, sans-serif;
    margin-left: auto;
    margin-right: auto;
    max-width: 75rem;
  }
  
  .case > * {
    background-color: #ccc;
    padding: 1em;
  }
  
  /* Typically, you wouldn't specify a height or min-height on this, instead allowing your actual content (i.e., text, images, etc.) to dictate the height of your content area. But since this example has very minimal content, I've set a min-height to mimic a taller content area. */
  .content {
    min-height: 250px;
  }
  
  .boxes-dark {
      height: 350px;
  }

  .boxes-other {
      height: 200px;
  }

  #seige {
      height:250px;
      width: 350px;
      margin: 0px auto;
      padding: 0;
      margin-bottom: 30px;
  }